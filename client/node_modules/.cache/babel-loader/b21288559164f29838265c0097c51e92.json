{"ast":null,"code":"var _jsxFileName = \"/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/Calendar/Calendar.js\",\n    _s = $RefreshSig$();\n\nimport { React, moment, useState, useEffect, styles, buildCalendar, dayStyles } from \"./index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Calendar = () => {\n  _s();\n\n  const [calendar, setCalendar] = useState([]);\n  const [value, setValue] = useState(moment());\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  const currMonthName = () => {\n    return value.format(\"MMMM\");\n  };\n\n  const currYear = () => {\n    return value.format(\"YYYY\");\n  };\n\n  const prevMonth = () => {\n    return value.clone().subtract(1, \"month\");\n  };\n\n  const nextMonth = () => {\n    return value.clone().add(1, \"month\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Previous\",\n        onClick: () => setValue(prevMonth()),\n        children: String.fromCharCode(171)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [currMonthName(), \" \", currYear()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Next\",\n        onClick: () => setValue(nextMonth()),\n        children: String.fromCharCode(187)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Body\",\n      children: calendar.map(week => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: week.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Day\",\n          onClick: () => setValue(day),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: dayStyles(day, value),\n            children: day.format(\"D\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Calendar, \"mXN5jB57tCZupiAVogUxiAsZWzg=\");\n\n_c = Calendar;\nexport default Calendar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"sources":["/Users/ryanxu/Documents/Coding/the-app/client/src/Pages/Apps/Calendar/Calendar.js"],"names":["React","moment","useState","useEffect","styles","buildCalendar","dayStyles","Calendar","calendar","setCalendar","value","setValue","currMonthName","format","currYear","prevMonth","clone","subtract","nextMonth","add","String","fromCharCode","map","week","day"],"mappings":";;;AAAA,SACEA,KADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,aANF,EAOEC,SAPF,QAQO,SARP;;;AAUA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAACD,MAAM,EAAP,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,WAAW,CAACJ,aAAa,CAACK,KAAD,CAAd,CAAX;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;;AAIA,QAAME,aAAa,GAAG,MAAM;AAC1B,WAAOF,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrB,WAAOJ,KAAK,CAACG,MAAN,CAAa,MAAb,CAAP;AACD,GAFD;;AAIA,QAAME,SAAS,GAAG,MAAM;AACtB,WAAOL,KAAK,CAACM,KAAN,GAAcC,QAAd,CAAuB,CAAvB,EAA0B,OAA1B,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,WAAOR,KAAK,CAACM,KAAN,GAAcG,GAAd,CAAkB,CAAlB,EAAqB,OAArB,CAAP;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,OAAO,EAAE,MAAMR,QAAQ,CAACI,SAAS,EAAV,CAAjD;AAAA,kBACGK,MAAM,CAACC,YAAP,CAAoB,GAApB;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,mBACGT,aAAa,EADhB,OACqBE,QAAQ,EAD7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,OAAO,EAAE,MAAMH,QAAQ,CAACO,SAAS,EAAV,CAA7C;AAAA,kBACGE,MAAM,CAACC,YAAP,CAAoB,GAApB;AADH;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGb,QAAQ,CAACc,GAAT,CAAcC,IAAD,iBACZ;AAAA,kBACGA,IAAI,CAACD,GAAL,CAAUE,GAAD,iBACR;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,OAAO,EAAE,MAAMb,QAAQ,CAACa,GAAD,CAA5C;AAAA,iCACE;AAAK,YAAA,SAAS,EAAElB,SAAS,CAACkB,GAAD,EAAMd,KAAN,CAAzB;AAAA,sBAAwCc,GAAG,CAACX,MAAJ,CAAW,GAAX;AAAxC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CAjDD;;GAAMN,Q;;KAAAA,Q;AAmDN,eAAeA,QAAf","sourcesContent":["import {\n  React,\n  moment,\n  useState,\n  useEffect,\n  styles,\n  buildCalendar,\n  dayStyles,\n} from \"./index\";\n\nconst Calendar = () => {\n  const [calendar, setCalendar] = useState([]);\n  const [value, setValue] = useState(moment());\n\n  useEffect(() => {\n    setCalendar(buildCalendar(value));\n  }, [value]);\n\n  const currMonthName = () => {\n    return value.format(\"MMMM\");\n  };\n\n  const currYear = () => {\n    return value.format(\"YYYY\");\n  };\n\n  const prevMonth = () => {\n    return value.clone().subtract(1, \"month\");\n  };\n\n  const nextMonth = () => {\n    return value.clone().add(1, \"month\");\n  };\n  return (\n    <div className=\"Calendar\">\n      <div className=\"Header\">\n        <div className=\"Previous\" onClick={() => setValue(prevMonth())}>\n          {String.fromCharCode(171)}\n        </div>\n        <div>\n          {currMonthName()} {currYear()}\n        </div>\n        <div className=\"Next\" onClick={() => setValue(nextMonth())}>\n          {String.fromCharCode(187)}\n        </div>\n      </div>\n      <div className=\"Body\">\n        {calendar.map((week) => (\n          <div>\n            {week.map((day) => (\n              <div className=\"Day\" onClick={() => setValue(day)}>\n                <div className={dayStyles(day, value)}>{day.format(\"D\")}</div>\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n"]},"metadata":{},"sourceType":"module"}